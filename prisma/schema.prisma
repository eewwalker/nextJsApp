generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //defines relationship to user model
  //onDelete: Cascade => If a User is deleted, all related Account records will also be deleted.
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // @@id([provider, providerAccountId])

  //Ensures that the combination of provider and providerAccountId is unique across all Account records.
  // This prevents the same provider account from being registered multiple times.
  @@unique([provider, providerAccountId])
}

//@id = field is primary key
//@default(cuid()): Sets the default value to a unique string generated by the cuid function.
//? optional
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  passwordHash  String
  image         String?
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
